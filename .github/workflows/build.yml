name: Build
on: [push, pull_request]
env:
  PARLAY_NUM_THREADS: 16

jobs:

  msvc:
    name: Microsoft Visual C++ 19
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Configure
      run: |
        md build
        cd build
        cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS_DEBUG=" /bigobj " -DPARLAY_TEST=On ..

    - name: Build
      run: |
        cd build
        cmake --build .

    - name: Test
      run: |
        cd build
        ctest -C Debug --no-tests=error --output-on-failure

  wsl:
    strategy:
      matrix:
        config:
        - {
            name: "WSL GCC-10",
            cc: "gcc-10", cxx: "g++-10"
          }
        - {
            name: "WSL Clang-11",
            cc: "clang-11", cxx: "clang++-11"
          }

    name: ${{ matrix.config.name }}
    runs-on: windows-latest
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
    - uses: actions/checkout@v2
    - uses: Vampire/setup-wsl@v1
      with:
        distribution: Ubuntu-20.04

    - name: Install
      run: |
        sudo apt-get -qq update
        sudo apt-get -y install make ${{matrix.config.cc}} ${{matrix.config.cxx}}
        wget --quiet https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz
        tar -xf cmake-3.18.2-Linux-x86_64.tar.gz

    - name: Configure
      run: |
        mkdir build
        cd build
        CC=${{matrix.config.cc}} CXX=${{matrix.config.cxx}} ../cmake-3.18.2-Linux-x86_64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On -DWSL=True ..

    - name: Build
      run: |
        cd build
        make

    - name: Test
      run: |
        cd build
        ../cmake-3.18.2-Linux-x86_64/bin/ctest -C Debug --no-tests=error --output-on-failure

  msys:
    strategy:
      matrix:
        include:
          - { sys: mingw64 }
          - { sys: clang64 }
          - { sys: ucrt64 }
          
    name: MSYS2 ${{ matrix.sys }}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p
          
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On ..

    - name: Build
      run: |
        cd build
        cmake --build .

    - name: Test
      run: |
        cd build
        ctest -C Debug --no-tests=error --output-on-failure

  cygwin:
    strategy:
      matrix:
        config:
        - {
            name: "Cygwin GCC",
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Cygwin Clang",
            cc: "clang", cxx: "clang++"
          }

    name: ${{ matrix.config.name }}
    runs-on: windows-latest
    defaults:
      run:
        shell: C:\tools\cygwin\bin\bash.exe -eo pipefail -o igncr '{0}'
    steps:
    - uses: actions/checkout@v2
    - uses: egor-tensin/setup-cygwin@v3
      with:
        packages: git,make,gcc-core,gcc-g++,cmake,clang,libiconv-devel,cygwin32-libiconv-1.14-2

    - name: Configure
      run: |
        mkdir build
        cd build
        CC=${{matrix.config.cc}} CXX=${{matrix.config.cxx}} cmake -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On ..

    - name: Build
      run: |
        cd build
        make

    - name: Test
      run: |
        cd build
        ctest -C Debug --no-tests=error --output-on-failure
